{"title":"Handoff 编程","uid":"e22bf8154724897227d91eac96e617a1","slug":"Handoff-编程","date":"2016-08-08T13:41:38.000Z","updated":"2019-05-14T04:53:36.000Z","comments":true,"path":"api/articles/Handoff-编程.json","keywords":null,"cover":[],"content":"<p><img src=\"https://support.apple.com/library/content/dam/edam/applecare/images/zh_CN/iOS/ios9-elcapitan-continuity-hero.jpg\"></p>\n<p>#Handoff技术介绍</p>\n<p>Handoff是苹果“融合”主题中的重要元素之一，同时也是iOS8和OS X Yosemite中新的“Continuity”特征集的一部分。“Continuity”功能包含了能跨平台兼容的AirDrop、可在iPad和Mac上拨打iPhone电话和处理SMS信息，以及全新的更易使用的连接服务。无论你在做什么工作，无论你想要继续进行工作的设备是什么，苹果都试图通过透明、无缝的操作来实现这个想法，而不是试图通过一系列不同的设备来适应一个界面，也不是以云服务为中心。这是一个以用户为中心的大胆选择，一旦苹果正式提供这项功能，它可能将改变我们使用iPhone、iPad以及Mac的方式。所以，我们不禁要问，Handoff是如何工作的？</p>\n<span id=\"more\"></span>\n<p>##在设备上使用相同的iCloud账户</p>\n<p>为了让Handoff能够正常工作，你需要在iPhone、iPad或者Mac上使用相同的iCloud账户进行登录。这让Handoff知晓这些设备都属于同一个人——也就是你。由于iCloud账户（Apple ID）也同样被用来备份和恢复、使用iMessage和FaceTime、iCloud电子邮箱和存储在云中的文档，以及其他各种各样的功能，因此，这是一个安全、可靠的方式来确保当前用户和使用的设备不会出现错误匹配。</p>\n<p>使用相同的iCloud账户进行登录同样也意味着：如果你的文档存储在iCloud里面，并且可以被所有设备使用，那么Handoff并不会浪费时间和流量来推送这些文件。Handoff仅仅只会推送你当前所进行的任务。</p>\n<p>##Bluetooth LE 和距离</p>\n<p>Handoff同时也需要你的iPhone、iPad或者Mac相互之间处于一个比较近的距离。当设备进入到一定范围内并且您当前正在进行的任务支持Handoff功能，设备将通过Bluetooth LE（低功耗蓝牙4.0）来自动配对。</p>\n<p>使用比较近的距离可以让Handoff符合苹果的“以个人为中心”的目的。它将有效地保护你的隐私，比如正在浏览的网站、正在撰写的电子邮件或者消息，或者正在处理的文件。它保证这些任务将被推送到用你的账户登录的设备上，但是不会推送到不在你控制范围内的其他设备上面。比如说，如果你在家里工作，你不需要把你的任务推送到学校的设备上，或者你在咖啡店，你也不需要把任务推送到你的工作电脑上。</p>\n<p>距离能够有效的支持便利性和保护隐私，两全其美不是吗？</p>\n<p>##苹果应用程序和Handoff</p>\n<p><img src=\"http://www.imore.com/sites/imore.com/files/styles/xlarge/public/field/image/2014/06/handoff_iphone_icon_wwdc_2014_screenshot.jpg?itok=gUrKxAcs\"></p>\n<p>到目前为止，苹果已经宣布，Handoff将支持以下应用：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.邮件<br>2.Safari<br>3.Pages<br>4.Numbers<br>5.Keynote<br>6.地图<br>7.信息<br>8.提醒事项<br>9.日历<br>10.通讯录</p></blockquote>\n<p>有了它们，你就可以在Mac上编写、阅读电子邮件以及网页、编辑文档、展示表格和keynote、地图定位、输入文字、选择一个提醒事项、进行预约、或者查找地址，然后继续在你的iPhone或iPad完成这些工作，反之亦然。</p>\n<p>苹果尚未宣布任何多媒体应用可以支持Handoff功能，例如启动Mac上的iTunes播放列表，然后在iTunes音乐应用上继续使用；或者你的iPhone上启动游戏，然后继续在iPad上进行游戏。苹果同样也没有宣布Handoff可以让你从Apple TV中推送一部电影到iPad，如果你想换房间看电影的话。（和AirPlay功能相反，AirPlay可以将你的iPhone、iPad或者Mac上的电影推送到Apple TV上。）</p>\n<p>Handoff仍然处于起步阶段，它还有很多不足，但是，路要一步一步的走，来日方长。</p>\n<p>##第三方应用和Handoff</p>\n<p>苹果公司给开发者提供了相同的API（应用编程接口）来开发。开发者需要明确、谨慎地指定需要使用Handoff的任务，比如说写tweet或者阅读RSS文章，并且要保证所涉及到的应用程序都使用同样的开发者Team ID。这能够保护客户的隐私，因此我们就不必担心某个应用程序会影响推送的正常工作。</p>\n<p>使用Handoff功能的应用程序必须有注册开发者的签名，并通过App Store的审核，或者在Mac上予以提供。再次重申，Handoff是安全的，甚至具有一定程度的灵活性。</p>\n<p>##网站和Handoff</p>\n<p><img src=\"http://www.imore.com/sites/imore.com/files/styles/xlarge/public/field/image/2014/06/handoff_ipad_icon_wwdc_2014_screenshot.jpg?itok=6xjj6xbU\"></p>\n<p>Handoff不仅能在应用程序间工作，它同样也能在网站和应用程序间工作。比如说，如果你正在Mac上的Safari浏览iMore.com或者Facebook.com，然后拿着你的iPhone离开了房间，iMore或者Facebook应用会提示你是否接受Handoff——假设开发者实现了这个功能。</p>\n<p>开发者可以使用苹果提供的API来认证他们的网站和应用程序，并且将这两者关联起来。这个操作确认了Handoff功能使用的两个终端。</p>\n<p>如果要在切换到浏览器中使用，Handoff将从始发设备发送一个URL（统一资源定位符）到你想要恢复工作的设备上面。然后这个设备将打开浏览器，加载这个URL，随后你就可以在浏览器上继续浏览之前看的网页了。</p>\n<p>如果要在切换到本地应用中使用，网站上指定的任务将连接到关联的应用程序中的相应位置。即打开Facebook应用，加载你正在浏览的页面，随后你也可以在本地应用中继续浏览之前看的内容了。</p>\n<p>##持续数据流（Continuation streams）</p>\n<p>苹果还表示，开发者可以在两个不同设备的相同应用程序之间双向传输数据流。这使得设备间可以进行持续互动，包括读、写操作。例如，两个设备可以同时处理相同的任务，一个设备增减了文字，另一个设备也会同样进行相同的操作。</p>\n<p>开发者和苹果如何利用这个持续数据流功能，还有待观察……</p>\n<p>##图标显示位置</p>\n<p><img src=\"http://www.imore.com/sites/imore.com/files/styles/xlarge/public/field/image/2014/06/handoff_mac_icon_wwdc_2014_screenshot.jpg?itok=3xpVCJVx\"></p>\n<p>Handoff基于操作而工作。当一个应用或者浏览器进行加载、应用在后台运行或选项卡切换时，Handoff将会标识当前你正在做的操作——要么编写电子邮件、要么浏览特定的网页、要么编辑Pages文档，等等，随后Handoff将广播这些操作。</p>\n<p>在一定距离内的其他设备将会识别该操作并且为其调出相应的图标。</p>\n<p>在iPhone或者iPad上，这个图标放置于锁屏界面的左下角，或者放置在多任务选项卡界面（双击Home键得到的页面）中主屏的左边（设备解锁后）。</p>\n<p>在Mac上，这个图标放置在Dock的左边，或者放置在应用程序切换栏的右边（按下Command+Tab得到的小窗口）。</p>\n<p>当这个图标被选中之后，Handoff会向主设备的任务发出请求。如果你正在云中使用文档，那么只有文档位置会被传输。如果你正在浏览网站，那么只有URL会被传输。否则，无论你在处理什么内容都将会被全部传输过去。一旦所有必要的数据传输完成后（可能是直接通过Wi-Fi连接），应用程序将被运行，并且任务就会在你之前进行的地方运行。</p>\n<p>比方说，如果你正在iPhone上编写电子邮件，并且你正在你的Mac的传输范围内，“邮件”应用将会出现在OS X的Dock左边的一个新部分中。单击之后你就可以在OS X中的“邮件”应用中继续编写你之前在iPhone上未完成的邮件了。</p>\n<p>如果你正在Mac上使用Keynote，然后拿起你的iPad,你就会看到在锁屏界面的左下方出现了一个Keynote的应用图标。点击它，iPad上的Keynote就会运行，之前你在Mac上的Keynote所看到的内容将会出现在你的眼前。</p>\n<p>##安全和隐私</p>\n<p>苹果尚未说明Handoff是如何确保安全和保护隐私的。不过，由于苹果近期关于安全性和隐私性的历史动作来看，我们有充分的理由对其保持乐观。例如，苹果此前曾解释过AirDrop（另一个在Continuty阵营的服务）是如何确保安全和保护隐私的，这些解释令人印象深刻：</p>\n<p>当用户启用AirDrop，一个2048位的RSA身份表示就会被存储在设备上。此外，基于与用户的Apple ID关联的电子邮件地址和电话号码的AirDrop身份标识哈希表将会被创建。</p>\n<p>当用户选择AirDrop来共享某个项目时，设备将利用BTLE(Bluetooth LE)发出AirDrop信号。其他近距离的、激活AirDrop的设备将检测这个信号，并和所有者的身份标识哈希表的精简版进行回应。</p>\n<p>Wi-Fi信号将被直接用来进行设备间的数据交流，并不会连接互联网或者建立Wi-Fi热点。</p>\n<p>同样地，由于Handoff会在锁屏上显示，如何使用密码、Touch ID继续操作，以及是否允许Handoff在锁屏上显示，都可以在设置选项中进行处理。（出于安全方面考虑，BT LE和距离限制允许支持Handoff设备可以被确定为信任设备。）</p>\n<p>Handoff实现了一个不同于微软的“Windows无处不在”以及谷歌的“一切尽在云中”的设备通信方法。借助Handoff，没有任何隐私会被保存在服务器当中。苹果保持了Mac和Mac通信，iPhone和iPad通信的独立性。他们仅仅只是在形式上整合在了一起，但是无论你走到哪里，你设备间的任务都将透明、无缝地进行连接。</p>\n<p>#Handoff编程</p>\n<p>Handoff能够让用户在一台设备上开始某个任务,然后到另一个设备上矩形完成某个任务.<br>Handoff本意就是手递手,即将一个任务从一个设备传递给另一个设备.<br>Handoff是基于多点连接技术,它能够自动发现其他处于广播状态的设备,并进行通信.<br>通过 Handoff，您可以在一台设备上开始撰写文稿、电子邮件或信息，然后转到另一设备上继续进行。 </p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/handoff.png\"></p>\n<p>##使用Handoff的要求:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.2012年后的MacBook Air,MacBook Pro,iMac,Mac mini;2013年之后Mac Pro等,必须运行 Mac OS X 10以及更高的版本.<br>2.iOS设备必须是iPhone5以及更高,iPad Air等,系统必须是iOS8及更高版本.<br>3.传递过程是采用蓝牙,因此需要设备开启蓝牙,并且设备之间的距离应在10米内.这些设计都是在iCloud设置面板中登陆相同的Apple ID. Handoff<br>所在的应用在数字签名时候,必须使用相同的团队标示(Team ID)</p></blockquote>\n<p>##设置Handoff</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.Mac OS X 的设置方法是 打开’系统偏好设置’&gt;’通用’设置界面 &gt; ‘允许在这台Mac 和 iCloud设计之间使用Handoff’<br>2.iOS 设备开启Handoff,则打开设置应用的’通用’&gt;’Handoff于建议的应用程序’</p></blockquote>\n<p>使用Handoff</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.在其中一台设备上，打开兼容应用，如“邮件”或 Pages。<br>2.使用该应用开始一项任务，如撰写电子邮件或文稿。<br>3.然后，您可以切换到其他 iOS 或 Mac 上。</p></blockquote>\n<p>如果切换到 Mac，您可以按 Command-Tab 从离开的位置继续，或者您可以点按 Dock 中的应用图标：<br><img src=\"https://support.apple.com/library/content/dam/edam/applecare/images/zh_CN/iOS/mac-el-capitan-dock-continuity.jpg\"></p>\n<p>#Handoff工作原理</p>\n<p>这种在设备之间传递的任务被称为”用户活动”(User Activity),用户活动可以在设备之间通过Handoff技术传递.<br>用户在原始设备上打开Safari浏览器,然后创建用户活动对象,用户活动对象可以使用userInfo属性传递数据或流, userInfo中的数据包括: NSArray,NSData,NSDate,NSDictionary,NSNull,NSNumber,NSSet,NSString,NSURL;<br>userInfo中的流可以传递文件.原始设备会关闭用户活动,其他附件的设备(与原始设备采用相同的iCloud账号登陆)可以接受用户活动.</p>\n<p>Handoff API<br>Handoff 没有一个独立的框架,设计的类只有一个NSUserActivity, 就是 用户活动类.</p>\n<p><code>NSUserActivity类</code></p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NSUserActivity</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSObject</span> <span class=\"token punctuation\">&#123;</span>\n    \n    <span class=\"token comment\">/* Initializes and returns a newly created NSUserActivity with the given activityType. A user activity may be continued only in an application that (1) has the same developer Team ID as the activity's source application and (2) supports the activity's type. Supported activity types are specified in the application's Info.plist under the NSUserActivityTypes key. When receiving a user activity for continuation, the system locates the appropriate application to launch by finding applications with the target Team ID, then filtering on the incoming activity's type identifier.\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>activityType<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">/* Initializes and returns a newly created NSUserActivity with the first activityType from the NSUserActivityTypes key in the application’s Info.plist.\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">/* The activityType the user activity was created with.\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> activityType<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span> <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">/* An optional, user-visible title for this activity, such as a document name or web page title.\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> title<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token operator\">?</span>\n    \n    <span class=\"token comment\">/* The userInfo dictionary contains application-specific state needed to continue an activity on another device. Each key and value must be of the following types: NSArray, NSData, NSDate, NSDictionary, NSNull, NSNumber, NSSet, NSString, NSURL, or NSUUID. File scheme URLs which refer to iCloud documents may be translated to valid file URLs on a receiving device.\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> userInfo<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">NSObject</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">AnyObject</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span>\n    \n    <span class=\"token comment\">/* Adds to the userInfo dictionary the entries from otherDictionary.  The keys and values must be of the types allowed in the userInfo \n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">func</span> <span class=\"token function\">addUserInfoEntriesFromDictionary</span><span class=\"token punctuation\">(</span>otherDictionary<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">NSObject</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">AnyObject</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">/* The keys from the userInfo property which represent the minimal information about this user activity that should be stored for later restoration */</span>\n    @<span class=\"token function\">available</span><span class=\"token punctuation\">(</span>iOS <span class=\"token number\">9.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> requiredUserInfoKeys<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Set</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">String</span><span class=\"token operator\">></span>\n    \n    <span class=\"token comment\">/* If set to YES, then the delegate for this user activity will receive a userActivityWillSave: callback before being sent for continuation on another device. \n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> needsSave<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Bool</span>\n    \n    <span class=\"token comment\">/* When no suitable application is installed on a resuming device and the webPageURL is set, the user activity will instead be continued in a web browser by loading this resource.\n    */</span>\n    <span class=\"token atrule\">@NSCopying</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> webpageURL<span class=\"token punctuation\">:</span> <span class=\"token constant\">NSURL</span><span class=\"token operator\">?</span>\n    \n    <span class=\"token comment\">/* If non-nil, then an absolute date after which this activity is no longer eligible to be indexed or handed off. */</span>\n    @<span class=\"token function\">available</span><span class=\"token punctuation\">(</span>iOS <span class=\"token number\">9.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n    <span class=\"token atrule\">@NSCopying</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> expirationDate<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSDate</span>\n    \n    <span class=\"token comment\">/* A set of NSString* keywords, representing words or phrases in the current user's language that might help the user to find this activity in the application history. */</span>\n    @<span class=\"token function\">available</span><span class=\"token punctuation\">(</span>iOS <span class=\"token number\">9.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> keywords<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Set</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">String</span><span class=\"token operator\">></span>\n    \n    <span class=\"token comment\">/* When used for continuation, the user activity can allow the continuing side to connect back for more information using streams. This value is set to NO by default. It can be dynamically set to YES to selectively support continuation streams based on the state of the user activity.\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> supportsContinuationStreams<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Bool</span>\n    \n    <span class=\"token comment\">/* The user activity delegate is informed when the activity is being saved or continued (see NSUserActivityDelegate, below)\n    */</span>\n    <span class=\"token keyword\">weak</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> delegate<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSUserActivityDelegate</span><span class=\"token operator\">?</span>\n    \n    <span class=\"token comment\">/* Marks the receiver as the activity currently in use by the user, for example, the activity associated with the active window. A newly created activity is eligible for continuation on another device after the first time it becomes current.\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">func</span> <span class=\"token function\">becomeCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">/* If this activity is the current activity, it should stop being so and set the current activity to nothing. */</span>\n    @<span class=\"token function\">available</span><span class=\"token punctuation\">(</span>iOS <span class=\"token number\">9.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">func</span> <span class=\"token function\">resignCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">/* Invalidate an activity when it's no longer eligible for continuation, for example, when the window associated with an activity is closed. An invalid activity cannot become current.\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">func</span> <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">/* When an app is launched for a continuation event it can request streams back to the originating side. Streams can only be successfully retrieved from the NSUserActivity in the NS/UIApplication delegate that is called for a continuation event. This functionality is optional and is not expected to be needed in most continuation cases. The streams returned in the completion handler will be in an unopened state. The streams should be opened immediately to start requesting information from the other side.\n    */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">func</span> <span class=\"token function\">getContinuationStreamsWithCompletionHandler</span><span class=\"token punctuation\">(</span>completionHandler<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">NSInputStream</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">NSOutputStream</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">NSError</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">/* Set to YES if this user activity should be eligible to be handed off to another device */</span>\n    @<span class=\"token function\">available</span><span class=\"token punctuation\">(</span>iOS <span class=\"token number\">9.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> eligibleForHandoff<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Bool</span>\n    \n    <span class=\"token comment\">/* Set to YES if this user activity should be indexed by App History */</span>\n    @<span class=\"token function\">available</span><span class=\"token punctuation\">(</span>iOS <span class=\"token number\">9.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> eligibleForSearch<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Bool</span>\n    \n    <span class=\"token comment\">/* Set to YES if this user activity should be eligible for indexing for any user of this application, on any device, or NO if the activity contains private or sensitive information or which would not be useful to other users if indexed.  \n    The activity must also have requiredUserActivityKeys or a webpageURL */</span>\n    @<span class=\"token function\">available</span><span class=\"token punctuation\">(</span>iOS <span class=\"token number\">9.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> eligibleForPublicIndexing<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Bool</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>NSUserActivityTypeBrowsingWeb 字符串</code></p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\"><span class=\"token comment\">/* The activity type used when continuing from a web browsing session to either a web browser or a native app.\n Only activities of this type can be continued from a web browser to a native app.\n*/</span>\n@<span class=\"token function\">available</span><span class=\"token punctuation\">(</span>iOS <span class=\"token number\">8.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">let</span> <span class=\"token builtin\">NSUserActivityTypeBrowsingWeb</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>NSUserActivityDelegate协议</code></p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\"><span class=\"token comment\">/* The user activity delegate is responsible for updating the state of an activity and is also notified when an activity has been continued on another device.\n*/</span>\n\n@<span class=\"token function\">available</span><span class=\"token punctuation\">(</span>iOS <span class=\"token number\">8.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">protocol</span> <span class=\"token builtin\">NSUserActivityDelegate</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSObjectProtocol</span> <span class=\"token punctuation\">&#123;</span>\n    \n    <span class=\"token comment\">/* The user activity will be saved (to be continued or persisted).\n     The receiver should update the activity with current activity state.\n    */</span>\n    <span class=\"token keyword\">optional</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">func</span> <span class=\"token function\">userActivityWillSave</span><span class=\"token punctuation\">(</span>userActivity<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSUserActivity</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">/* The user activity was continued on another device.\n    */</span>\n    <span class=\"token keyword\">optional</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">func</span> <span class=\"token function\">userActivityWasContinued</span><span class=\"token punctuation\">(</span>userActivity<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSUserActivity</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">/* If supportsContinuationStreams is set to YES the continuing side can request streams back to this user activity.\n    This delegate callback will be received with the incoming streams from the other side. The streams will be in an unopened state. The streams should be opened immediately to start receiving requests from the continuing side.\n    */</span>\n    <span class=\"token keyword\">optional</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">func</span> <span class=\"token function\">userActivity</span><span class=\"token punctuation\">(</span>userActivity<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSUserActivity</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> didReceiveInputStream inputStream<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSInputStream</span><span class=\"token punctuation\">,</span> outputStream<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSOutputStream</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>##Handoff编程的一般流程:</p>\n<p>原始设备<br>开始<br>1.实例化NSUserActivity对象<br>2.调用NSUserActivity的becomeCurrent方法<br>3.用户活动状态改变<br>4.NSUserActivityDelegate的userActivityWillSave:方法被调用</p>\n<p>其他设备<br>5.实例化 NSUserActivity对象<br>6.调用NSUserActivity的becomeCurrent()方法成为当前活动者<br>7.UIApplicationDelegate的application:continueUserAcitivity:restorationHandler:方法被调用<br>8.UIResponder的restoreUserActivityState:方法被调用</p>\n<p>结束</p>\n<p>上述流程可以分为 两个阶段: 原始设备创建用户活动和用户活动继续传递到其他设备.</p>\n<p>第一个阶段原始设备实例化NSUserActivity 对象创建用户活动,并调用NSUserActivity的becomeCurrent()方法称为当前活动者.</p>\n<p>第二阶段中用户可用改变活动状态,这时NSUserActivityDelegate的userActivytyWillSave:方法调用,然后活动调用数据继续传递到其他设备,其他设备也需要实例化NSUserActivity对象创建,调用becomeCurrent方法称为当前活动者,接着UIApplicationDelegate的application:continueUserActivity:restorationHandler: 方法被调用,这个方法中需要返回,并将需要恢复状态的UIResponder对象集合传递给restorationHandler闭包.根据restorationHandler闭包中的UIResponder对象,调用UIResponder对象的restoreUserActivityState:方法.</p>\n<p>编程实例</p>\n<p><code>AppDelegate.swift</code></p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">\n<span class=\"token keyword\">func</span> <span class=\"token function\">application</span><span class=\"token punctuation\">(</span>application<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UIApplication</span><span class=\"token punctuation\">,</span> continueUserActivity userActivity<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSUserActivity</span><span class=\"token punctuation\">,</span> restorationHandler<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">AnyObject</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Void</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Bool</span> <span class=\"token punctuation\">&#123;</span>\n     \n     \n     <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> rootViewController <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>window<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>rootViewController <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token builtin\">UINavigationController</span> <span class=\"token punctuation\">&#123;</span>\n         \n         <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> viewController <span class=\"token operator\">=</span> rootViewController<span class=\"token punctuation\">.</span>topViewController <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token builtin\">ViewController</span> <span class=\"token punctuation\">&#123;</span>\n             <span class=\"token function\">restorationHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>viewController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n         \n             <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n         <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n     \n <span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>Info.plist 文件中添加 NSUserActivityTypes 数组<br>item0内容填入 cn.williamxie.HandoffDemo</p>\n<p><code>ViewController.swift</code></p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> controllerActivityType <span class=\"token operator\">=</span> <span class=\"token string\">\"cn.williamxie.HandoffDemo\"</span>\n<span class=\"token keyword\">let</span> powerSwitchKey <span class=\"token operator\">=</span> <span class=\"token string\">\"powerSwitch_key\"</span>\n<span class=\"token keyword\">let</span> brightnessSilderKey <span class=\"token operator\">=</span> <span class=\"token string\">\"brightnessSilder_key\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ViewController</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">UIViewController</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">NSUserActivityDelegate</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">var</span> activity <span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSUserActivity</span><span class=\"token operator\">?</span>\n    \n    <span class=\"token atrule\">@IBOutlet</span> <span class=\"token keyword\">weak</span> <span class=\"token keyword\">var</span> powerSwitch<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UISwitch</span><span class=\"token operator\">!</span>\n    \n    <span class=\"token atrule\">@IBOutlet</span> <span class=\"token keyword\">weak</span> <span class=\"token keyword\">var</span> brightnessSilder<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UISlider</span><span class=\"token operator\">!</span>\n    \n    <span class=\"token atrule\">@IBOutlet</span> <span class=\"token keyword\">weak</span> <span class=\"token keyword\">var</span> brightnessValue<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UILabel</span><span class=\"token operator\">!</span>\n    \n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">viewDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">viewDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">viewWillAppear</span><span class=\"token punctuation\">(</span>animated<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        \n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">viewWillAppear</span><span class=\"token punctuation\">(</span>animated<span class=\"token punctuation\">)</span>\n        \n        <span class=\"token comment\">//实例化activity对象</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>activity <span class=\"token operator\">=</span> <span class=\"token function\">NSUserActivity</span><span class=\"token punctuation\">(</span>activityType<span class=\"token punctuation\">:</span> controllerActivityType<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>activity<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>userInfo <span class=\"token operator\">=</span> <span class=\"token function\">getActivityInfoData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>activity<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> <span class=\"token string\">\"灯泡控制器\"</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>activity<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>delegate <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span>\n        \n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>activity<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">becomeCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">viewWillDisappear</span><span class=\"token punctuation\">(</span>animated<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        \n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">viewWillDisappear</span><span class=\"token punctuation\">(</span>animated<span class=\"token punctuation\">)</span>\n        \n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>activity<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>activity<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>delegate <span class=\"token operator\">=</span> <span class=\"token constant\">nil</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">didReceiveMemoryWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">didReceiveMemoryWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">//准备activity中的数据</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">getActivityInfoData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">String</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">AnyObject</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>\n        \n        <span class=\"token keyword\">var</span> activityInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">String</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">AnyObject</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        activityInfo<span class=\"token punctuation\">[</span>powerSwitchKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> powerSwitch<span class=\"token punctuation\">.</span>on\n        activityInfo<span class=\"token punctuation\">[</span>brightnessSilderKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> brightnessSilder<span class=\"token punctuation\">.</span>value\n        \n        <span class=\"token keyword\">return</span> activityInfo\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token atrule\">@IBAction</span> <span class=\"token keyword\">func</span> <span class=\"token function\">switchValueChanged</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">:</span> <span class=\"token builtin\">AnyObject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>        \n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>activity<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>needsSave <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token atrule\">@IBAction</span> <span class=\"token keyword\">func</span> <span class=\"token function\">silderValueChanged</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">:</span> <span class=\"token builtin\">AnyObject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">let</span> newValue <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>brightnessSilder<span class=\"token punctuation\">.</span>value\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>brightnessValue<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">:</span> <span class=\"token string\">\"%0.0f\"</span><span class=\"token punctuation\">,</span> newValue<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>activity<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>needsSave <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">//MARK: --实现NSUserActivityDelegate协议方法</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">userActivityWillSave</span><span class=\"token punctuation\">(</span>userActivity<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSUserActivity</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        userActivity<span class=\"token punctuation\">.</span>userInfo <span class=\"token operator\">=</span> <span class=\"token function\">getActivityInfoData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">restoreUserActivityState</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">:</span> <span class=\"token builtin\">NSUserActivity</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> activity<span class=\"token punctuation\">.</span>activityType <span class=\"token operator\">==</span> controllerActivityType <span class=\"token punctuation\">&#123;</span>\n            \n            <span class=\"token keyword\">let</span> info <span class=\"token operator\">=</span> activity<span class=\"token punctuation\">.</span>userInfo <span class=\"token keyword\">as</span><span class=\"token operator\">!</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">String</span> <span class=\"token punctuation\">:</span> <span class=\"token builtin\">AnyObject</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">let</span> switchValue <span class=\"token operator\">=</span> info<span class=\"token punctuation\">[</span>powerSwitchKey<span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span><span class=\"token operator\">!</span> <span class=\"token builtin\">Bool</span>\n            <span class=\"token keyword\">let</span> silderValue <span class=\"token operator\">=</span> info<span class=\"token punctuation\">[</span>brightnessSilderKey<span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span><span class=\"token operator\">!</span> <span class=\"token builtin\">Float</span>\n            \n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>powerSwitch<span class=\"token punctuation\">.</span><span class=\"token function\">setOn</span><span class=\"token punctuation\">(</span>switchValue<span class=\"token punctuation\">,</span> animated<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>brightnessSilder<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> silderValue\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>brightnessValue<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">:</span> <span class=\"token string\">\"%0.0f\"</span><span class=\"token punctuation\">,</span> silderValue<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n","text":" #Handoff技术介绍 Handoff是苹果“融合”主题中的重要元素之一，同时也是iOS8和OS X Yosemite中新的“Continuity”特征集的一部分。“Continuity”功能包含了能跨平台兼容的AirDrop、可在iPad和Mac上拨打iPhone电话和处理...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"iOS SDK","slug":"iOS-SDK","count":19,"path":"api/categories/iOS-SDK.json"}],"tags":[{"name":"Handoff","slug":"Handoff","count":3,"path":"api/tags/Handoff.json"}],"toc":"","author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}},"mapped":true,"prev_post":{"title":"iCloud 编程","uid":"548f4e29db9400645bad688f092ca0b0","slug":"iCloud-编程","date":"2016-08-08T13:48:46.000Z","updated":"2016-08-23T02:49:57.000Z","comments":true,"path":"api/articles/iCloud-编程.json","keywords":null,"cover":null,"text":"#iCloud简介 iCloud 是苹果”云战略”的重要棋子，iCloud是苹果的云服务技术。它的重点是提供数据的存储服务，苹果给每个用户免费提供5GB的云服务空间。如果不够，用户可以付费购买更多的空间。苹果公司斥资 10亿美元在北卡罗莱纳州建设新数据中心-iDataCenter...","link":"","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"iOS SDK","slug":"iOS-SDK","count":19,"path":"api/categories/iOS-SDK.json"}],"tags":[{"name":"iCloud","slug":"iCloud","count":1,"path":"api/tags/iCloud.json"}],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}},"next_post":{"title":"iOS逆向工程","uid":"5492d10686659c2d6f970cda1bae8c29","slug":"iOS逆向工程","date":"2016-08-08T13:20:21.000Z","updated":"2016-08-10T11:05:09.000Z","comments":true,"path":"api/articles/iOS逆向工程.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"iOS逆向工程","slug":"iOS逆向工程","count":2,"path":"api/categories/iOS逆向工程.json"}],"tags":[],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}}}