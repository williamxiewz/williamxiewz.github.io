{"title":"苹果开发者账号相关知识","uid":"8cac6432eb6fae6843b175d84d8cbe0c","slug":"苹果开发者账号相关知识","date":"2016-08-13T12:14:06.000Z","updated":"2019-05-14T04:53:21.000Z","comments":true,"path":"api/articles/苹果开发者账号相关知识.json","keywords":null,"cover":[],"content":"<p>#Certificates<br>什么是证书<br>什么是证书？证书就是：证明证书拥有者拥有证书上所说的能力。一个证书要涉及到颁发者，拥有者，证明拥有者拥有了什么能力。</p>\n<p>例如，CET-4证书；颁发者：学校，拥有者：自己，证明的能力：英语达到四级水平。<br>苹果开发者证书也是一样，颁发者：自己，拥有者：安装证书的电脑；证明的能力：可以安装或者打包某应用程序。</p>\n<span id=\"more\"></span>\n<p>开发者证书分为两种类型：Development Certificate（开发证书）和Production Certificate（发布证书）。</p>\n<p>##开发者证书能力来源<br>那么当某台电脑安装开发者证书后，这台电脑是如何拥有这种能力的呢？</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>苹果在此运用了代码签名验证。代码签名验证允许我们的操作系统来判断是谁对App进行了签名，在安装了Xcode后，Xcode会在项目编译期间使用你的代码签名验证，这个验证是一个由Apple认证过的公钥-私钥对组成，私钥存储在你的钥匙串中（Mac本地，在系统实用工具中），公钥包含在证书（Certificates）中，证书在本地钥匙串和开发者账号中都有存储。另外，还有一个我们可以叫做媒介证书的证书来确保我们的证书（Certificates）是经过授权而发布的。当安装好Xcode时媒介证书（Intermediate Certificate）就已经安装到我们的钥匙串中去了。通过在开发者账号（Developer Account）和本地（Mac）都经过验证的证书（Certificate）我们就可以利用合法的证书进行App的测试和发布了。</p></blockquote>\n<p>##电脑向证书机构申请凭证<br>在制作证书的时候会有一步让你上传一个CSR文件(用于换取证书的公钥文件)，导出CSR这个过程其实就是电脑向证书机构申请凭证的过程。证书是你用电脑制作的并且颁发给你的电脑的。但是这台电脑是否具有制作证书的能力，就是要这个CSR文件来凭证。CSR从钥匙串中导出，具体步骤在制作证书的时候有具体描述，这里不再详细叙述。</p>\n<p>证书在Xcode工程中所对应的位置</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/appledeveloperdistributionguidexcode.png\" alt=\"证书在Xcode工程中所对应的位置\"></p>\n<p>#Identifiers<br>Identifiers中又分为App IDs、Pass Type IDs、Website Push IDs、iCloud Containers、App Groups、Merchant IDs、这里主要讲解App IDs。</p>\n<p>App ID是什么<br>App ID其实就是一个App的身份证，一个App的唯一标示。在Project中称为Bundle ID。在Member Center、Project、iTunes Connect都是需要此ID去标示此App的唯一性。Bundle ID在不同环境下的表现关系。</p>\n<p><img src=\"https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Art/bundleid_2x.png\" alt=\"Bundle ID在不同环境下的表现\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一个Bundle ID精确的标识了一个App。Bundle ID字符串中只能包含字符（A-Z，a-z，0-9），连接符（-），点（.）而且此字符串最好是reverse-DNS格式的。例如你公司的域名是Acme.com，你App的名字是Hello，那么你可以用com.Acme.Hello作为你的Bundle ID。</p></blockquote>\n<p>Bundle ID的作用：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.在Xcode工程中，Bundle ID储存在Info.plist中，当你编译工程的时候，他会把此文件拷贝到你的app包中。<br>2.在iTunes Connect，用Bundle ID去标识App，在你第一次构建上传之后，你就不能在改变或者删除你的Bundle ID<br>3.在Member Center，你创建一个和Bundle ID相匹配的App ID。如果App ID是精准类型的，你就必须精确的去匹配你的Bundle ID，Bundle ID是大小写敏感的。</p></blockquote>\n<p>##在Member Center中添加App ID<br>在Member Center中添加App ID也是很简单，选中App ID点击右上角的+号，App ID Description就是写一下这个App ID的描述了。App ID Prefix：App ID的前缀，这里苹果为了更精确的保证App ID的唯一性使用了开发者账号的Team ID作为App ID的前缀。App ID Suffix：App ID的后缀，这里有两种类型，一种是精准的，一种是通用的，我们在使用中大多数都是使用精准的，直接把我们的Bundle ID填进去就好。下面就是App包含的服务，这个根据自己业务所需的类型自己选择就可以了，而我们用的最多的也就是Push Notifications推送服务。然后continue就可以了。</p>\n<p>#Devices<br>Device就是用来测试的设备。在Member Center中添加device的步骤其实也很简单了，主要就是要拿到device的UDID，这里我们可以利用iTunes、iTools、Xcode这些工具都可以拿到设备的UDID。需要注意的就是，每个开发者账号，每年最多可以添加100台调试设备，而且不能更改，想要更改就要等到下一年重新续费的时候才能更改调试设备了。在下面要讲述的描述文件中只有发布到App Store和In House的时候这两种类型的描述文件的制作是不需要添加device的，而其他描述文件的制作都是需要添加device的。</p>\n<p>#Provisioning Profiles</p>\n<p>描述文件描述了可由哪台电脑，把哪个App，安装到哪台手机上面。一个描述文件的制作是需要App ID、Device、Certificate这些信息的。所以苹果在Member Center中把这个文件的制作排在最后面是很合理的。描述文件其实可以分为两种类型，一种是带有device信息的；而另一种是不带device信息的。</p>\n<p>##带device信息的描述文件</p>\n<p><img src=\"https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Art/ad_hoc_provisioning_2x.png\" alt=\"带有device信息的描述文件\"></p>\n<p>这种类型的描述文件包括所有开发类型的描述文件和发布到Ad Hoc上面的描述文件。开发和发布到Ad Hoc上都是需要指明具体要安装到哪部手机上的。</p>\n<p>##不带device信息的描述文件</p>\n<p><img src=\"https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Art/store_provisioning_2x.png\" alt=\"不带device信息的描述文件\"></p>\n<p>不带device信息的描述文件只有发布到App Store和In House两种情况下才使用这个描述文件，因为通过这两个渠道发布的App我们是不能确定将来要安装到那一台设备上的，因此也就不会带有Device的信息。</p>\n<p>描述文件在Xcode中的位置</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/appledeveloperdistributionguideprovision.png\" alt=\"描述文件在Xcode中的位置\"></p>\n<p>团队开发证书的管理<br>在团队开发的时候，最好是一个人去管理证书，当有其他人要用的时候，可直接导出.p12证书供其他开发者使用。证书出了问题，我感觉还是相当麻烦的，而App ID在添加之后，基本上是不会改变的，除非要为App添加新的服务，这时候才要重新编辑App ID，所以App ID最好也是管理证书的人去管理App ID。添加设备这一块就很随意了，所有的开发者都应该有权去管理添加设备这一块。描述文件的制作这个要区分一下是开发类型的描述文件，还是发布类型的描述文件。开发类型的描述文件应该是团队里的每一个开发者都有权去管理的，实际上当开发类型的描述文件出现问题的时候，开发者可以对此描述文件重新编辑一下进行使用，这样是不会影响其他开发者的，甚至你可以自己重新制作一个描述文件也没什么问题。但是发布类型的描述文件，这个最好还是管理证书的那个人去管理这个描述文件。打包发布的时候如果这个描述文件出现变化，还是很麻烦的，而且这个描述文件对于团队其他开发者来说也不是很常用，甚至是根本用不到这个描述文件。</p>\n<p>导出.p12<br>.p12又称为个人信息交换证书。此证书实际包含了.cer证书及对应的私钥信息。上述证书中提到.cer文件中包含公钥，私钥在本地钥匙串中。而.p12包含了公钥私钥，所以可以分发给团队其他成员使用。.cer文件没有包含私钥，所以别人的电脑上用此证书时找不到对应私钥，从而使用不了。在导出p12的时候是点击证书导出的，如（图5-1）所示：有下标箭头的就是有对应的私钥。</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/appledeveloperdistributionguidep12.png\" alt=\".p12证书的导出\"></p>\n<p>参考:<br>    <a href=\"https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html\">App Distribution Guide</a></p>\n","text":"#Certificates什么是证书什么是证书？证书就是：证明证书拥有者拥有证书上所说的能力。一个证书要涉及到颁发者，拥有者，证明拥有者拥有了什么能力。 例如，CET-4证书；颁发者：学校，拥有者：自己，证明的能力：英语达到四级水平。苹果开发者证书也是一样，颁发者：自己，拥有者：...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"iOS SDK","slug":"iOS-SDK","count":19,"path":"api/categories/iOS-SDK.json"}],"tags":[{"name":"Apple Developer","slug":"Apple-Developer","count":1,"path":"api/tags/Apple-Developer.json"}],"toc":"","author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}},"mapped":true,"prev_post":{"title":"Xcode开发者工具磁盘空间清理","uid":"fcb7ab71bc8df532f85ded713e0747c8","slug":"Xcode开发者工具磁盘空间清理","date":"2016-08-15T07:50:10.000Z","updated":"2016-08-19T08:17:40.000Z","comments":true,"path":"api/articles/Xcode开发者工具磁盘空间清理.json","keywords":null,"cover":null,"text":"#Xcode磁盘空间大清理 使用Daisy Disk可以查看整个电脑的存储情况 ##移除对旧设备的支持 每次把一个设备接入电脑进行真机调试之前，电脑会对设备建立索引，也在此文件夹下生成对该设备系统的支持文件。于是这里存在了一堆对旧版本iOS设备支持的文件。而我最近基本只对iOS9...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"iOS SDK","slug":"iOS-SDK","count":19,"path":"api/categories/iOS-SDK.json"}],"tags":[],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}},"next_post":{"title":"iOS使用TestFlight进行App Beta版测试","uid":"65d1545dfe3983525223d1b1c48e131d","slug":"iOS-使用TestFlight进行App-Beta版测试","date":"2016-08-13T09:13:38.000Z","updated":"2019-05-14T04:53:32.000Z","comments":true,"path":"api/articles/iOS-使用TestFlight进行App-Beta版测试.json","keywords":null,"cover":[],"text":"在2014WWDC中库克用了20秒的时间，简短的3句话，介绍了测试版本的TestFlight服务。TestFlight用于将Beta版测试，TestFlight已经被苹果收购，所以不要担心存在第三方测试造成数据泄露问题。TestFlight需要iOS8及以上版本的iOS设备才能运...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"iOS SDK","slug":"iOS-SDK","count":19,"path":"api/categories/iOS-SDK.json"}],"tags":[{"name":"TestFlight","slug":"TestFlight","count":1,"path":"api/tags/TestFlight.json"}],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}}}