{"title":"Apple Pay编程开发详细教程","uid":"6355ecbfbbb37a43783c9d609c208b3c","slug":"Apple-Pay编程开发详细教程","date":"2016-08-12T13:22:21.000Z","updated":"2019-05-14T04:49:58.000Z","comments":true,"path":"api/articles/Apple-Pay编程开发详细教程.json","keywords":null,"cover":[],"content":"<p>#Apple Pay简介</p>\n<p>##什么是Apple Pay<br>Apple Pay，简单来说, 就是一种移动支付方式。通过Touch ID/ Passcode，用户可使用存储在iPhone 6, 6p等设备上的信用卡和借记卡支付证书来授权支付；</p>\n<p>它是苹果公司在2014苹果秋季新品发布会上发布的一种基于NFC的手机支付功能，于2014年10月20日在美国正式上线，2016年2月18日凌晨5：00， Apple Pay 业务在中国上线。</p>\n<p>Apple Pay 是在 iOS 8 中第一次被介绍，它可以为你的应用中的实体商品和服务，提供简单、安全、私密的支付方式。它使得用户支付起来非常简便，只需按一下指纹就可以授权进行交易。</p>\n<span id=\"more\"></span>\n<p>##使用前提<br>1.支持iOS设备</p>\n<p>Apple Pay 只能在特定的设备上使用，目前为止，这些设备包括 iPhone 6, iPhone 6+, iPad Air 2, iPad mini 3. 这是因为 Apple Pay 需要特定的硬件芯片来支持，这个硬件叫做 Secure Element （简称SE，安全元件）,他可以用来存储和加解密信息。<br>    <img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguidesupportDevice.png\" alt=\"Apple Pay设备支持列表\"></p>\n<p>2.系统支持</p>\n<pre><code>iOS8.0+版本\n</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：iOS9.2才真正的支持“银联支付”， 意味着iOS9.2以后才可以在中国市场使用</p></blockquote>\n<p>3.银行支持<br>     需要将被支持银行的银行卡， 添加到手机wallet应用当中<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguidesupportBank1.png\"><br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguidesupportBank2.png\"></p>\n<p>##应用场景<br>1.线下支付</p>\n<p>如果发现以下标识，就代表该商家支持Apple Pay</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideapplepayID.png\"></p>\n<p>苹果公开的Apple Pay商家有    </p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideapplepaysupportMerchant.png\"><br>2.线上支付</p>\n<p>2.1应用内支付</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideapplepaysupport.png\"></p>\n<p>2.2 Apple Pay on Web </p>\n<p>##与其他第三方支付的区别<br>1.硬件方面</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Apple Pay：必须是iOS设备， 而且是按照线上支付和线下支付区分不同的真机设备(Apple Pay设备支持列表)<br>微信、支付宝： 基本跟硬件设备无关， 支持大多数的只能手机</p></blockquote>\n<p>2.网络环境要求</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Apple Pay：线上支付需要联网， 线下支付无需联网就可以支付<br>微信、支付宝： 无论是线上还是线下支付， 都需要联网使用</p></blockquote>\n<p>3.使用技术</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Apple Pay：线下支付使用的是 基于NFC的近场通讯技术<br>微信、支付宝： 线下支付使用的是 扫码支付（条形码、二维码）</p></blockquote>\n<p>4.主要功能</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Apple Pay：线上支付、线下支付、部分升级后的ATM机可以取款<br>微信、支付宝： 线上支付、线下支付、转账、理财等</p></blockquote>\n<p>5.安全性能</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Apple Pay：不保留银行卡信息，并且不会暴漏给外界、不分流银行存款（不需要从银行卡转钱到另外一个平台）、不能充值  安全性较高<br>微信、支付宝： 密码保护，身份验证等手段保护账户  安全性相对稍差</p></blockquote>\n<p>6.支付时长</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Apple Pay：无论是线上支付，还是线下支付， 只需要验证指纹即可支付。非常迅速<br>微信、支付宝： 需要扫码支付， 流程相对繁琐，所以时长较长</p></blockquote>\n<p>7.各自弊端</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Apple Pay：只适用于苹果设备， 支付场景单一，无转账理财等业务<br>微信、支付宝： 安全性较差， 必须联网操作，需要充值到对应平台</p></blockquote>\n<p>#为什么要使用Apple Pay<br>Apple Pay 大大简化了开发者的工作。你无需自己来管理卡号，也不需要用户去注册银行卡。你可以移除部分业务模块，甚至不需要用户模块了。购买和账单信息回自动交由 Apple Pay token 来处理。这意味着简化了购买流程，可以带来更高的转化率。</p>\n<p>在 WWDC session 702 , <a href=\"\">Apple Pay Within Apps</a> 中, Nick Shearer 介绍了部分 Apple Pay 在美国的不同商业交易中超高转化率的统计情况。<br>Stubhub 发现使用 Apple Pay 的客户的转换率超过传统客户 20%。<br>OpenTable 发现采用了 Apple Pay 之后呈现了 50%的增长。<br>Staples 发现采用了 Apply Pay 后，实现了109%的转换率增长。<br>其实不仅仅是超高的转化率,还有就是让我们的支付方式看起来高大上.</p>\n<p>#Apple Pay 工作流程</p>\n<p>接入方式</p>\n<p>因为 Apple Pay 在国内是跟银联合作的，所以在接入方式的选择上有两种。一种是使用 CUP SDK（CUP 就是 China Union Pay）等第三方的 SDK。另外一种就是使用 iOS 的 PassKit Framework 和银联的接口来接入。本质上来说，第三方 SDK 就是对 PassKit Framework 和传输信息的加密解密过程做了一层封装，让开发者可以轻松完成 Apple Pay 的接入。</p>\n<p>两种接入方式对比：第一种使用第三方 SDK 接入的方式开发成本较低，但缺点在于对 Payment Sheet 定制化程度不够。而第二种形式的缺点就是开发成本较高。不仅 iOS 端要处理好 Payment Sheet 的显示和隐藏的逻辑，还要对各种异常情况做好相应的 UI 处理。同时在后台也需要处理好以下情况：支付信息的解密，银联接口的交互，以及订单状态的处理。</p>\n<p>支付流程分析</p>\n<p>要理解 Apple Pay 的支付流程，其中最关键一点就是：Apple 不处理跟扣款相关的逻辑，它只负责支付信息的传递。Apple 通过 Touch ID 来验证银行卡卡持有者身份。实际的扣款行为则是发生在银联端，接入了 Apple Pay 的商户组织好 Apple 返回的支付信息，向银联发出扣款请求之后，该笔交易才会真正发生扣款。所以，商户还是要跟银联进行结算的，Apple Pay 只是提供了一种支付渠道。</p>\n<p><img src=\"https://developer.apple.com/library/ios/ApplePay_Guide/Art/payment_intro_2x.png\"></p>\n<p>Apple Pay 应用内支付流程如下:</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.App 根据使用场景显示 Payment Sheet。<br> 2.用户选择需要进行支付的卡以及支付需要的个人信息后，进行指纹验证，之后根据情况，有些银行卡还需要输入卡对应的密码（PIN 码）<br> 3.iOS 将支付相关信息发送到 Apple 的服务器，进行加密。然后通过回调函数将加密后的支付信息返回给对应 App。<br> 4.App 在收到回调之后，将对应信息发送到自己的服务器。<br> 5.服务器在收到 App 发送来的支付信息后，对数据进行解密操作，提取其中需要的信息，组织银联接口报文，调用银联的接口，完成扣款</p></blockquote>\n<p>下面对过程中的关键地方做一些说明。</p>\n<p>1.App 收到的 Payment sheet 回调信息中，包含了一个 PKPayment 的对象，该对象包含了所有跟 Apple Pay 支付相关所有信息。比如用户的手机号或者收货地址等等，其中最重要的就是 payment token，它的 paymentData 字段数据就是需要发送给服务器的内容。用户信息部分是明文的，而支付信息也就是 paymentData 部分则是被加密过的。</p>\n<p>2.paymentData 的内容是 Json 格式的二进制流，服务器在收到这个数据之后进行解析，其中的 header.wrappedKey 是使用非对称加密算法加密过的对称秘钥。使用在苹果开发者后台配置 merchant 时的私钥进行解密，会得到这个对称秘钥。然后用这个对称秘钥对 data 字段所包含的加密数据进行解密，可以得到 Apple 返回的与支付相关的信息。此支付信息是加密过的，包含了用户支付的卡号和 PIN 码等信息，理论上只有银联才能解析出来真正的内容，我们作为商户是看不到具体信息的。服务器端需要将这些解密过的信息组织成银联所需的报文内容，然后调用银联的扣款接口，完成扣款。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>特别注意：paymentData 里的有一个交易金额字段，但该字段返回的数据并不是实际支付的金额。在组织银联报文的时候一定要注意不要直接使用该字段的内容作为扣款金额的值。</p></blockquote>\n<p>3.调用银联接口时也有一些需要注意的事项。拿调用银联扣款接口举例，在组织好报文并调用银联接口发送给银联之后，银联的接口返回结果同时有同步和异步两种形式。注意：如果同步结果返回成功，说明银联成功收到并开始处理扣款请求，并不是代表扣款成功。扣款是否成功，是通过异步形式来通知的。扣款不成功的原因可能有很多，比如卡被冻结，PIN 码错误，余额不足等等。为了保证交易状态的准确，推荐的做法是这样：在调用扣款接口后，如果 3 秒内没有收到本次调用的异步结果回调，则使用银联的流水号，开始轮询银联的交易状态接口来确保拿到确切的交易结果。</p>\n<p>4.Apple Pay 是很重视数据安全的。从上面的流程可以看到，为了保证整个交易的安全，Apple Pay 对每个关键流程都有加密处理。同时对每个绑定了 Apple Pay 的银行卡生成一个虚拟卡号，这个卡号的部分信息可以在 wallet 里绑定的卡片详情里看到。在实际支付中是用的这个卡号来做交易，这样可以在一定程度上保证我们银行卡的信息安全。</p>\n<p>#Apple Pay对象类简介</p>\n<p>所有这些类都包含在 PassKit（因此以 PK 开头） 之内，所以你需要在用到 Apple Pay 的地方，引入这个框架</p>\n<pre><code>import PassKit\n</code></pre>\n<p><code>PKPaymentButton</code></p>\n<p><code>PKPaymentSummaryItem</code><br>这个类是你的Apple Pay 交易清单上的一条。它可以是商品的，也可以是税，或者运费。<br>账单列表使用PKPaymentSummaryItem添加描述和价格，价格使用NSDecimalNumber。<br>PKPaymentSummaryItem初始化：<br>  label为商品名字或者是描述，amount为商品价格，折扣为负数，type为该条账单为最终价格还是估算价格(比如出租车价格预估)</p>\n<p><code>NSDecimalNumber</code><br> NSDecimalNumber可以使用数字初始化，也可以使用字符串</p>\n<p><code>PKPaymentRequest</code><br>PKPaymentRequest 合并你所有想要用户看到的信息。诸如 merchant identifier, country code 和 currency code。</p>\n<p><code>PKPaymentAuthorisationViewController</code><br>PKPaymentAuthorisationViewController 让用户及时授权 PKPaymentRequest，并且选择投递地址和支付的卡。</p>\n<p><code>PKPayment</code><br>PKPayment包括需要处理的交易的信息，并且包含需要用户确认的消息。</p>\n<p>#iOS应用内集成Apple Pay<br>开发环境 : </p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.Mac OS X 10.11.6<br>  2.Xcode 8 beta4<br>  3.付费开发者账号<br>  4.Swift 3.0</p></blockquote>\n<p>##配置支付环境<br>1.1创建一个Xcode项目<br><code>为项目创建一个AppleID</code><br>Apple Pay Demo &gt; General &gt; Bundle identifier</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideconfigureAppleID.png\"></p>\n<p>1.2开启Apple Pay功能<br>Apple Pay Demo &gt; Capabilities<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideconfigureAddMerchantID.png\"><br>1.3添加MerchantID<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideconfigureMerchantID2.png\"></p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideconfigureMerchantIDApplePay2.png\"></p>\n<p>##代码实现</p>\n<pre><code>定义成员变量\n//支付视图\n@IBOutlet weak var payView: UIView!\n//支付按钮\nvar payButton : PKPaymentButton? = nil\n//价格数组 \nlet priceArray = [9888.0,230.0,200.0,150.0,233.0,33.0,-1800.0]\n/// 购物清单数组\nvar paymentSummaryItems : [PKPaymentSummaryItem]? = nil\n/// 配送方式数组\nvar paymentShippingMethods : [PKShippingMethod]? = nil\n</code></pre>\n<p>1.判断当前是否支持Apple Pay</p>\n<pre><code>//1.判断当前设备是否支持苹果支付\nif !PKPaymentAuthorizationViewController.canMakePayments() &#123;\n    //隐藏\n    payView.isHidden = true\n    print(&quot;设备不支持ApplePay，请升级至9.0以上版本，且iPhone6以上设备才支持&quot;)\n&#125;\n</code></pre>\n<p>2.判断当前是否添加银行卡<br>检查用户是否可进行某种卡的支付，是否支持Amex、MasterCard、Visa与银联四种卡，根据自己项目的需要进行检测</p>\n<pre><code>if !PKPaymentAuthorizationViewController.canMakePayments(usingNetworks: [PKPaymentNetwork.chinaUnionPay,PKPaymentNetwork.visa,PKPaymentNetwork.masterCard])&#123;\n    print(&quot;没有绑定银行卡,跳转到绑定银行卡界面&quot;)\n    //创建一个跳转按钮,当用户点击按钮时,跳转到添加银行卡界面\n    payButton = PKPaymentButton(paymentButtonType: PKPaymentButtonType.setUp, paymentButtonStyle: PKPaymentButtonStyle.whiteOutline)\n    payButton!.addTarget(self, action: #selector(ViewController.jump), for: .touchUpInside)\n    //添加到payView\n    payView.addSubview(payButton!)\n&#125;\n//跳转到银行卡界面\nfunc jump()  &#123;\n    let pl = PKPassLibrary()\n    pl.openPaymentSetup()\n&#125;\n</code></pre>\n<p>如图:<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideapplepaysetup.png\" alt=\"没有绑定银行卡,需要去绑定\"><br>如果当前系统支持Apple Pay 以及 Wallet 已经添加了银行卡,显示购买按钮</p>\n<pre><code>payButton = PKPaymentButton(paymentButtonType: PKPaymentButtonType.buy, paymentButtonStyle: PKPaymentButtonStyle.black) \npayButton!.addTarget(self, action: #selector(ViewController.buy), for: .touchUpInside)     \n//添加到payView\npayView.addSubview(payButton!)\n</code></pre>\n<p>如图:<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideapplepaypay.png\" alt=\"可以正常支付\">           </p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意:显示的Apple Pay按钮和Set Apple Pay按钮图片需要按照官方文档 要求设置</p></blockquote>\n<p>3.创建支付请求<br>创建一个PKPaymentRequest,该request需要包括所有商品和服务费用的，例如邮寄费，税或者折扣等</p>\n<pre><code>//1.创建PKPaymentRequest\nlet request = PKPaymentRequest()\n//2.配置支付请求\n//2.1配置申请的merchantID\nrequest.merchantIdentifier = &quot;你申请的merchantID&quot;\n//2.2 配置国家代码 和 货币\nrequest.countryCode = &quot;CN&quot;\nrequest.currencyCode = &quot;CNY&quot;\n//2.3 配置用户可进行支付的银行卡\nrequest.supportedNetworks = [PKPaymentNetwork.chinaUnionPay,PKPaymentNetwork.discover,PKPaymentNetwork.masterCard]\n//2.4 配置商家处理协议 \n//设置支持的交易处理协议，3DS必须支持，EMV为可选，目前国内的话还是使用两者吧\nrequest.merchantCapabilities = [PKMerchantCapability.capability3DS,PKMerchantCapability.capabilityEMV]\n//2.5 配置购买商品清单(订单)\nvar sum : Double = 0.0\n_ = priceArray.map &#123; i  in\n            sum = sum + i\n    &#125;\n    \nlet item1 = PKPaymentSummaryItem(label: &quot;DJI精灵4无人机主机&quot;, amount: NSDecimalNumber(value: priceArray[0]))\nlet item2 = PKPaymentSummaryItem(label: &quot;DJI精灵4智能电池&quot;, amount: NSDecimalNumber(value: priceArray[1]))\nlet item3 = PKPaymentSummaryItem(label: &quot;DJI精灵4螺旋桨&quot;, amount: NSDecimalNumber(value: priceArray[2]))\nlet item4 = PKPaymentSummaryItem(label: &quot;DJI精灵4旅行背包&quot;, amount: NSDecimalNumber(value: priceArray[3] ) )\nlet item5 = PKPaymentSummaryItem(label: &quot;DJI精灵4第二手柄&quot;, amount: NSDecimalNumber(value: priceArray[4]))\nlet item6 = PKPaymentSummaryItem(label: &quot;DJI精灵4云台盖&quot;, amount: NSDecimalNumber(value: priceArray[5]))\nlet item7 = PKPaymentSummaryItem(label: &quot;大学生折扣价&quot;, amount: NSDecimalNumber(value: priceArray[6]))\n//最后这个是支付给谁\nlet totalItem = PKPaymentSummaryItem(label: &quot;DJI官方旗舰店&quot;, amount: NSDecimalNumber(value: sum))\n//note:支付清单 ,最后一个item ,代表汇总\n//summaryItems为账单列表，类型是 NSMutableArray，这里设置成成员变量，在后续的代理回调中可以进行支付金额的调整。\nrequest.paymentSummaryItems = [item1,item2,item3,item4,item5,item6,item7,totalItem]\nself.paymentSummaryItems = request.paymentSummaryItems\n//3.0 配置请求的附加信息\n//设置发票配送信息(billingAddress)和货物配送地址信息(ShippingAddress),用户设置后可以通过代理回调 代理获取信息的更新\n//3.1  是否显示发票收货地址, 显示哪些选项\n//如果需要邮寄账单可以选择进行设置，默认PKAddressFieldNone(不邮寄账单)\n//楼主感觉账单邮寄地址可以事先让用户选择是否需要，否则会增加客户的输入麻烦度，体验不好\nrequest.requiredBillingAddressFields = .all\n//3.2 送货地址信息,默认PKAddressFieldNone(没有送货地址)\n//需要根据不同的商品类型来设置requiredShippingAddressFields，如果使电子/虚拟商品（一般为提取/下载链接），则显示联系人邮箱。如果为实物，则显示联系人地址、手机号以及邮箱\nrequest.requiredShippingAddressFields = .all\n    \n//设置货物的配送方式，不需要不配置\n//3.3 配置快递方式 &lt;PKShippingMethod*&gt;\nlet method1 = PKShippingMethod(label: &quot;韵达快递&quot;, amount: NSDecimalNumber(value: 0.0))\nmethod1.detail = &quot;送货上门&quot;\nmethod1.identifier = &quot;yundakuaidi&quot;\n    \nlet method2 = PKShippingMethod(label: &quot;顺风快递&quot;, amount: NSDecimalNumber(value: 18.0))\nmethod2.detail = &quot;24小时&quot;\nmethod2.identifier = &quot;shunfengkuaidi&quot;\n\nrequest.shippingMethods =  [method1,method2]\nself.paymentShippingMethods = request.shippingMethods   \n//3.4 配置快递取货方式\nrequest.shippingType = .storePickup\n    \n//3.5 添加一些附加的数据\nrequest.applicationData = &quot;BuyID=123456789&quot;.data(using: String.Encoding.utf8)\n    \n    \n</code></pre>\n<p>4.弹出授权视图控制,让用户去支付</p>\n<pre><code> //显示购物信息并进行支付\nlet avc  = PKPaymentAuthorizationViewController(paymentRequest: request)\navc.delegate = self\nself.present(avc, animated: true, completion: nil)\n</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>显示所有已绑定的银行卡。<br>当选择卡片会调用代理方法paymentAuthorizationViewController:didSelectPaymentMethod:completion:该方法，需要实现completion完成回调，否则会卡在payment processing界面</p></blockquote>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideapplepayavc.png\"></p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideapplepaywillauthrizetion.png\" alt=\"等待用户TouchID或者输入密码\"></p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/applepayprogrammingguideapplePayDone.png\" alt=\"Apple Pay支付完成\"></p>\n<p>5.PKPaymentAuthorizationViewControllerDelegate 代理方法</p>\n<p>5.1 选择支付方式代理方法</p>\n<pre><code> /**\n 选择支付方式\n - parameter controller:    授权视图控制器\n - parameter paymentMethod: 支付方式信息\n - parameter completion:    回调\n */\nfunc paymentAuthorizationViewController(_ controller: PKPaymentAuthorizationViewController, didSelect paymentMethod: PKPaymentMethod, completion: ([PKPaymentSummaryItem]) -&gt; Void) &#123;\n    //作用:\n    //选择支付方式选择回调,用于更新不同的货币,支付金额等,主要更新paymentSummaryItems对象数组\n    print(&quot;已经选了一个付款方式&quot;)\n    //付款方式\n    var  paymentType : String = &quot;&quot;\n    switch paymentMethod.type &#123;\n    case .unknown:\n        paymentType = &quot;未知&quot;\n    case .debit:\n        paymentType = &quot;借记卡&quot;\n    case .credit:\n        paymentType = &quot;信用卡&quot;\n    case .prepaid:\n        paymentType = &quot;预付卡&quot;\n    case .store:\n        paymentType = &quot;store方式&quot;\n    &#125;\n    //网络内购部分数据会为nil\n    print(&quot;当前网络:\\(paymentMethod.network),支付方式:\\(paymentType),支付卡号:\\(paymentMethod.displayName)&quot;)\n    print(paymentMethod.paymentPass)\n    \n    completion(self.paymentSummaryItems!)\n    \n&#125;\n</code></pre>\n<p>5.2选择送货地址信息代理方法</p>\n<pre><code>/**\n 选择送货地址信息\n - parameter controller: 授权视图控制器\n - parameter contact:    送货地址信息\n - parameter completion: 回调\n */\nfunc paymentAuthorizationViewController(_ controller: PKPaymentAuthorizationViewController, didSelectShippingContact contact: PKContact, completion: (PKPaymentAuthorizationStatus, [PKShippingMethod], [PKPaymentSummaryItem]) -&gt; Void) &#123;\n    print(&quot;选择收货人联系方式:\\(contact))&quot;)\n    //送货信息选择回调，如果需要根据送货地址调整送货方式，比如普通地区包邮+极速配送，偏远地区只有付费普通配送，进行支付金额重新计算，可以实现该代理.\n    //返回给系统  更新以后的shippingMethods配送方式和更新以后的summaryItems账单列表\n    //如果不支持该送货信息返回想要的PKPaymentAuthorizationStatus\n    \n    completion(PKPaymentAuthorizationStatus.success, self.paymentShippingMethods!, self.paymentSummaryItems!)\n&#125;\n</code></pre>\n<p>5.3选择邮寄方式代理方法</p>\n<pre><code>/**\n 选择邮寄方式\n - parameter controller:     授权视图控制器\n - parameter shippingMethod: 邮寄方式\n - parameter completion:     回调\n */\nfunc paymentAuthorizationViewController(_ controller: PKPaymentAuthorizationViewController, didSelect shippingMethod: PKShippingMethod, completion: (PKPaymentAuthorizationStatus, [PKPaymentSummaryItem]) -&gt; Void) &#123;\n    print(&quot;选择邮寄方式为:\\(shippingMethod.label)&quot;)\n    //配送方式回调，如果需要根据不同的送货方式进行支付金额的调整，比如包邮和付费加速配送，可以实现该代理\n    //更新paymentSummaryItems数组\n    completion(PKPaymentAuthorizationStatus.success, self.paymentSummaryItems!)\n&#125;\n</code></pre>\n<p>5.4已经授权支付代理方法</p>\n<pre><code>func paymentAuthorizationViewController(_ controller: PKPaymentAuthorizationViewController, didAuthorizePayment payment: PKPayment, completion: (PKPaymentAuthorizationStatus) -&gt; Void) &#123;\n    print(&quot;完成授权,获取Token,连接商家服务器&quot;)\n    //支付凭据，发给服务端进行验证支付是否真实有效\n    print(payment.token)\n    print(payment.shippingMethod)  //送货方式\n    print(payment.billingContact)  //账单信息\n    print(payment.shippingContact) //送货信息\n\n    // 一般在此处,拿到支付信息, 发送给服务器处理, 处理完毕之后, 服务器会返回一个状态, 告诉客户端,是否支付成功, 然后由客户端进行处理\n    let isSuccess = true\n    //它需要你连接服务器并上传支付令牌和其他信息，以完成整个支付流程。\n    if isSuccess &#123;\n        completion(.success)\n    &#125;else&#123;\n        completion(.failure)\n    &#125;\n    print(&quot;已经授权支付&quot;)\n&#125;\n</code></pre>\n<p>5.5授权控制器完成支付或者取消</p>\n<pre><code> func paymentAuthorizationViewControllerDidFinish(_ controller: PKPaymentAuthorizationViewController) &#123;\n    self.dismiss(animated: true, completion: nil)\n    print(&quot;取消或者完成交易&quot;)   \n&#125;\n</code></pre>\n<p><img src=\"#\" alt=\"项目源代码\"></p>\n<p>#Web端集成Apple Pay</p>\n","text":"#Apple Pay简介 ##什么是Apple PayApple Pay，简单来说, 就是一种移动支付方式。通过Touch ID/ Passcode，用户可使用存储在iPhone 6, 6p等设备上的信用卡和借记卡支付证书来授权支付； 它是苹果公司在2014苹果秋季新品发布会上发...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"iOS SDK","slug":"iOS-SDK","count":18,"path":"api/categories/iOS-SDK.json"}],"tags":[{"name":"ApplePay","slug":"ApplePay","count":2,"path":"api/tags/ApplePay.json"}],"toc":"","author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}},"mapped":true,"prev_post":{"title":"iOS使用TestFlight进行App Beta版测试","uid":"65d1545dfe3983525223d1b1c48e131d","slug":"iOS-使用TestFlight进行App-Beta版测试","date":"2016-08-13T09:13:38.000Z","updated":"2019-05-14T04:53:32.000Z","comments":true,"path":"api/articles/iOS-使用TestFlight进行App-Beta版测试.json","keywords":null,"cover":[],"text":"在2014WWDC中库克用了20秒的时间，简短的3句话，介绍了测试版本的TestFlight服务。TestFlight用于将Beta版测试，TestFlight已经被苹果收购，所以不要担心存在第三方测试造成数据泄露问题。TestFlight需要iOS8及以上版本的iOS设备才能运...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"iOS SDK","slug":"iOS-SDK","count":18,"path":"api/categories/iOS-SDK.json"}],"tags":[{"name":"TestFlight","slug":"TestFlight","count":1,"path":"api/tags/TestFlight.json"}],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}},"next_post":{"title":"翻译: Apple Pay编程指南","uid":"b7a7249920521c3b70ef581661870b51","slug":"翻译-Apple-Pay编程指南","date":"2016-08-10T12:38:06.000Z","updated":"2016-08-14T06:20:00.000Z","comments":true,"path":"api/articles/翻译-Apple-Pay编程指南.json","keywords":null,"cover":[],"text":"#关于Apple Pay ApplePay是一种移动支付技术，它能够让用户以一种便捷安全的方式为现实世界中购买的商品和服务付款。 关于相关App里的数字商品和服务，请参考In-App Purchase Programming Guide. ##Apple Pay 工作流程 使用A...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"iOS SDK","slug":"iOS-SDK","count":18,"path":"api/categories/iOS-SDK.json"}],"tags":[{"name":"ApplePay","slug":"ApplePay","count":2,"path":"api/tags/ApplePay.json"},{"name":"编程指南","slug":"编程指南","count":1,"path":"api/tags/编程指南.json"}],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}}}