{"title":"iOS Xcode Server 持续集成","uid":"4f32058287c9be1a1db4b39798fb03e9","slug":"iOS-Xcode-Server-持续集成","date":"2016-08-17T05:02:45.000Z","updated":"2016-08-19T05:20:20.000Z","comments":true,"path":"api/articles/iOS-Xcode-Server-持续集成.json","keywords":null,"cover":[],"content":"<p><a href=\"http://www.jianshu.com/p/5faf777fdd97\">转载自牧码人_简书</a></p>\n<p>#前言<br>常用的持续集成工具有Jenkins、Travis CI、Xcode server等，当然我们选择最简单的Xcode server。</p>\n<p>OS X server中集成了git版本管理功能，Xcode server持续集成服务，还有wiki知识库管理等，你甚至还可以拿它搭建一个网站服务器。</p>\n<p>在持续集成过程中你可以直接使用os x server 的git版本管理功能，将代码提交至自己搭建的OS X server服务器。也可以将代码提交至其他git版本管理仓库中(比如GitHub)。</p>\n<p>设备</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1.一台Git服务器，可以用GitHub、oschina等。<br> 2.一台装OS X Server的服务器，必须为MAC，下文简称 Xcode Server服务器。<br> 3.若干MAC做客户端，下文简称客户端。<br> 4.若干台iOS测试机。</p></blockquote>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460947852507721.jpg\"></p>\n<span id=\"more\"></span>\n<p>#配置Xcode Server服务器</p>\n<p>1、Apple给开发者可以凭开发者账号免费兑换OS X Server。免费兑换地址：</p>\n<p><a href=\"https://developer.apple.com/devcenter/mac/loadredemptioncode.action?seedId=13CB96H8S4\">https://developer.apple.com/devcenter/mac/loadredemptioncode.action?seedId=13CB96H8S4</a></p>\n<p>2、下载OS X Server后点击安装。</p>\n<p>3、打开 Server 应用，以查看 OS X Server 中提供的服务列表。选择“Xcode”。</p>\n<p>点按“选取 Xcode”按钮，然后在“应用程序”文件夹中选择“Xcode”。Xcode 服务将自动启动。</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460947991508601.jpg\"></p>\n<p>4、开发者团队</p>\n<p>在此处千万不要添加开发者账号</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948069330944.jpg\"></p>\n<p>5、添加git存储库，如果用Github、oschina或者自己搭建的git服务器则不需要此步骤。</p>\n<p>Xcode 服务 Bot 将从源 Git 储存库访问项目和代码。</p>\n<p>点按“储存库”，然后点按 添加按钮。选取 Git 储存库的名称，然后点按“创建”。</p>\n<p>储存库的 URL 基于服务器主机名称和储存库名称。例如，储存库的 URL 将为：<code>https://myserver.example.com/git/Mac_Calc.git</code></p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948113327431.jpg\"></p>\n<p>#配置Xcode客户端，创建bot</p>\n<p>1、打开xcode&gt;product&gt;create bot</p>\n<p>2、填写bot名称，选择Xcode Server服务器</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948144163523.jpg\"></p>\n<p>3、Actions：选择执行的动作：</p>\n<p>a、对代码进行静态分析</p>\n<p>b、对代码进行单元测试</p>\n<p>c、生成archive包（可以选择是否生成用户安装包）</p>\n<p>4、cleaning：选择在何时清理项目，有几个选项（总是、每天、每周、从不）</p>\n<p>5、configuration：选择编译配置（Debug、release）</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948172334787.jpg\"></p>\n<p>6、选择在何时Xcode Server服务器开始持续集成，有几个选项（定时、在有新代码提交时、手动）</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948204916489.jpg\"></p>\n<p>7、Before Integration 在开始持续集成前执行的脚本</p>\n<p>8、After Integration在持续集成后执行的脚本</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948361416744.jpg\"></p>\n<p>9、至此，创建bot完成</p>\n<p>#Xcode Server服务器证书配置</p>\n<p>1、配置Certificates</p>\n<p>打开钥匙串，将iPhone Developer: xxx和iPhone Distribution:xxx导出为.p12文件</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948394647612.jpg\"></p>\n<p>将导出的.p12文件 导入装OS X Server的MAC的钥匙串中，这次需导入到钥匙串系统中，而不是登录中</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948423996794.jpg\"></p>\n<p>持续集成生成包时证书由/usr/bin/codesign管理，所以需将codesign添加为允许访问证书的程序</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948458399167.jpg\"></p>\n<p>在显示简介中选择 访问控制 &gt;始终通过这些应用程序访问 中点击加号，开始选择/usr/bin/codesign程序。选择完成后点击确认。由于usr是隐藏文件，在选择时使用快捷键 CMD+SHIFT+. 显示隐藏文件</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948483341197.jpg\"></p>\n<p>按照以上步骤将iPhone Distribution:xxx的访问控制，也添加/usr/bin/codesign程序。</p>\n<p>2、将Provisioning Profiles拷贝到Xcode Server</p>\n<p>Xcode客户端证书保存在以下文件夹中</p>\n<pre><code>User/Library/MobileDevice/ProvisioningProfiles\n</code></pre>\n<p>Xcode Server服务器证书保存在以下文件夹中</p>\n<pre><code>/Library/Developer/XcodeServer/ProvisioningProfiles\n</code></pre>\n<p>将Xcode客户端路径下的证书保存至Xcode Server服务器对应路径下</p>\n<p>3、在上传代码到仓库时需选择正确的证书，如下图</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948525292926.jpg\"></p>\n<p>#开始持续集成</p>\n<p>点击integrate开始持续集成</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948567315763.jpg\"></p>\n<p>正常情况等待几分钟会看到下面的界面，说明持续集成完成。可以将ipa包安装到手机，也可以将Archive上传到appStore。当然也可以直接用iPhone Safari访问xcode server进行安装。</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160418/1460948609187346.jpg\"></p>\n<p>#cocoapod依赖管理,上传ipad</p>\n<p>在本篇中我们主要讲解如何在持续集成前执行 pod install进行依赖管理，如何在持续集成后将.ipa上传至蒲公英服务器。</p>\n<p>打开Xcode&gt;Bot&gt;Edit Bot&gt;Triggers</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160420/1461119594489114.jpg\"></p>\n<p>首先添加Before Integrate脚本。</p>\n<p>持续集成前先执行 pod install。</p>\n<p>如果项目中没有使用CocoaPods管理三库请略过此步骤，想具体了解CocoaPods，请Google。</p>\n<pre><code>export LC_ALL=&quot;en_US.UTF-8&quot;\n</code></pre>\n<p>进入工程根目录</p>\n<pre><code>cd QYBaseProject\n</code></pre>\n<p> 执行pod install</p>\n<pre><code>/usr/local/bin/pod install\n</code></pre>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160420/1461119641462086.jpg\"></p>\n<p>添加 After Integrate脚本。</p>\n<p>持续集成后将ipa包上传至蒲公英。</p>\n<p>蒲公英是免费的应用分发平台，如果没有注册请注册。注册后在账户设置中有API Key、User Key。。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">IPA_NAME</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> <span class=\"token string\">\"<span class=\"token variable\">$&#123;XCS_ARCHIVE<span class=\"token operator\">%</span>.*&#125;</span>\"</span>.ipa<span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">IPA_PATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$&#123;XCS_OUTPUT_DIR&#125;</span>/ExportedProduct/Apps/<span class=\"token variable\">$&#123;IPA_NAME&#125;</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$&#123;IPA_PATH&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>请根据蒲公英自己的账号，将其中的 uKey 和 _api_key 的值替换为相应的值。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -F <span class=\"token string\">\"file=@<span class=\"token variable\">$&#123;IPA_PATH&#125;</span>\"</span> -F <span class=\"token string\">\"uKey=User Key\"</span> -F <span class=\"token string\">\"_api_key=API Key\"</span> http://www.pgyer.com/apiv1/app/upload<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160420/1461119665822939.jpg\"></p>\n<p>点击Integrate开始持续集成。</p>\n<p>集成完成后Xcode server会自动将ipa包上传至蒲公英，上传成功后，蒲公英会给你发送邮件。</p>\n<p>现在在iPhone Safari浏览器中打开邮件中的链接，点击安装。</p>\n<p>如果你的开发者账号不是企业账号，请用在账号中添加过Device id的设备上安装。</p>\n<p><img src=\"http://cc.cocimg.com/api/uploads/20160420/1461119695808831.jpg\"></p>\n","text":"转载自牧码人_简书 #前言常用的持续集成工具有Jenkins、Travis CI、Xcode server等，当然我们选择最简单的Xcode server。 OS X server中集成了git版本管理功能，Xcode server持续集成服务，还有wiki知识库管理等，你甚至还...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Mac OS Server","slug":"Mac-OS-Server","count":5,"path":"api/categories/Mac-OS-Server.json"}],"tags":[{"name":"Xcode Server","slug":"Xcode-Server","count":5,"path":"api/tags/Xcode-Server.json"}],"toc":"","author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}},"mapped":true,"prev_post":{"title":"Xcode Server 教程1：入门","uid":"68a518161e274e65975910a88128b5b1","slug":"Xcode-Server-教程1-入门","date":"2016-08-17T05:03:42.000Z","updated":"2019-05-14T04:53:27.000Z","comments":true,"path":"api/articles/Xcode-Server-教程1-入门.json","keywords":null,"cover":[],"text":"原文翻译地址 这篇文章是Xcode Server系列教程的第一部分。新的文章将会在我的Twitter（@czechboy0）上发布。 #前言 我们都知道Xcode Server是如何工作的。你的iOS团队成员花费数周的时间做一个特征分支，并且在这段时间里他没有把别人所做的修改合并...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"Mac OS Server","slug":"Mac-OS-Server","count":5,"path":"api/categories/Mac-OS-Server.json"}],"tags":[{"name":"Xcode Server","slug":"Xcode-Server","count":5,"path":"api/tags/Xcode-Server.json"}],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}},"next_post":{"title":"Xcode开发者工具磁盘空间清理","uid":"fcb7ab71bc8df532f85ded713e0747c8","slug":"Xcode开发者工具磁盘空间清理","date":"2016-08-15T07:50:10.000Z","updated":"2016-08-19T08:17:40.000Z","comments":true,"path":"api/articles/Xcode开发者工具磁盘空间清理.json","keywords":null,"cover":null,"text":"#Xcode磁盘空间大清理 使用Daisy Disk可以查看整个电脑的存储情况 ##移除对旧设备的支持 每次把一个设备接入电脑进行真机调试之前，电脑会对设备建立索引，也在此文件夹下生成对该设备系统的支持文件。于是这里存在了一堆对旧版本iOS设备支持的文件。而我最近基本只对iOS9...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"iOS SDK","slug":"iOS-SDK","count":19,"path":"api/categories/iOS-SDK.json"}],"tags":[],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}}}