{"title":"Xcode中执行脚本的方法","uid":"bd7e8525cbfb254b21794e3600c919c6","slug":"Xcode中执行脚本的方法","date":"2016-08-08T02:33:17.000Z","updated":"2019-05-14T04:53:26.000Z","comments":true,"path":"api/articles/Xcode中执行脚本的方法.json","keywords":null,"cover":[],"content":"<p>#第一种方法 Xcode中直接编写脚步并运行</p>\n<p>##1.选中一个target &gt; Build Phase &gt; +<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben1-1.png\"></p>\n<span id=\"more\"></span>\n<p>##2.选择New Run Script Phase<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben1-2.png\"><br>##3.得到下图<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben1-3.png\"><br>##4.Run Script 详解<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben1-4.png\"></p>\n<p>这里我们可以选择新建一个shell script 或者 将一个编写好的脚步拖进器</p>\n<p>shell脚本代码如下:</p>\n<pre><code> echo &quot;Dump of variables&quot;\n echo &quot;PRODUCT_NAME=$&#123;PRODUCT_NAME&#125;&quot;\n echo &quot;The action being performed on the current target,such as build or clean.&quot;\n echo &quot;ACTION=$&#123;ACTION&#125;&quot;\n echo &quot;The variations-debug,profile or normal-that Xcode is creating for the product being built.&quot;\n echo &quot;BUILD_VARIANTS=$&#123;BUILD_VARIANTS&#125;&quot;\n echo &quot;The name of the project containing the tartget that is being build.&quot;\n echo &quot;PROJECT_NAME=$PROJECT_NAME&quot;\n echo &quot;The name of the project being built, without any extension or suffix.&quot;\n echo &quot;PROJECT_NAME=$PROJECT_NAME&quot;\n echo &quot;The name of the target being built.&quot;\n echo &quot;TARGET_NAME=$TARGET_NAME&quot;\n echo &quot;The location of the target being built.&quot;\n echo &quot;TARGET_BUILD_DIR=$TARGET_BUILD_DIR&quot;\n echo &quot;The directory that holds the products created by building the tartgets in a project.&quot;\n echo &quot;BUILD_PRODUCTS_DIR=$TARGET_BUILD_DIR&quot;\n echo &quot;The directory that holds intermediate files for a specific target.&quot;\n echo &quot;TEMP_FILES_DIR=$TARGET_BUILD_DIR&quot;\n echo &quot;The directory that holds intermediate source files generated by the Compile Source build phase&quot;\n echo &quot;DERIVED_FILES_DIR=$TARGET_BUILD_DIR&quot;\n echo &quot;The location of the installed product.&quot;\n echo &quot;INSTALL_DIR=$TARGET_BUILD_DIR&quot;\n</code></pre>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben1-5.png\"></p>\n<p>##5.项目编译,脚本正常编译,结果如下</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben1-6.png\"></p>\n<p>#第二种方法 将写好的脚本在Xcode中执行</p>\n<p>##1.创建External Build System<br>创建编译系统作为目标APP的执行依赖.<br>选择Cross-platform &gt; Other &gt; External Build System<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben2-1.png\"></p>\n<p>##2.取名为External<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben2-2.png\"><br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben2-3.png\"><br>##3.创建shell脚本,取名Script.sh,内容如下:</p>\n<pre><code>#!/bin/sh   \necho &quot;External Build Tool&quot;  \necho &quot;Yes, it worked!&quot; &gt;&gt; ./DidItWork.txt   \n</code></pre>\n<p>为了确保可以正常的执行,在运行之前添加可执行属性.</p>\n<p><code>chmod +x  Script.sh</code></p>\n<p>##4.配置编译工具系统<br>Targets &gt; External &gt;Info &gt; External Build Tool Configuration<br>Build Tool填写 ./Script.sh<br>Directory 填写脚步所在目录</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben2-4.png\"></p>\n<p>##5.给目标App添加运行依赖<br>Targets &gt; Demo &gt;Build Phase &gt; Target Dependencies<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben2-5.png\"><br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben2-6.png\"><br>##6.运行编译<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben2-7.png\"><br>结果如下:</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben2-8.png\"></p>\n<p>如图所示, External Build System 作为目标App的依赖, 在目标App 编译之前进行编译,可以用于一些文件的配置.</p>\n<p>#第三种方法 将以上两种方法结合使用</p>\n<p>结合第一种方法和第二种方法<br>把写好的脚本拖进Run Script框中<br><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/xcode8zhixingjiaoben3-1.png\"><br>执行即可.</p>\n","text":"#第一种方法 Xcode中直接编写脚步并运行 ##1.选中一个target &gt; Build Phase &gt; + ##2.选择New Run Script Phase##3.得到下图##4.Run Script 详解 这里我们可以选择新建一个shell script 或...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"","author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}},"mapped":true,"prev_post":{"title":"iOS逆向工程","uid":"5492d10686659c2d6f970cda1bae8c29","slug":"iOS逆向工程","date":"2016-08-08T13:20:21.000Z","updated":"2016-08-10T11:05:09.000Z","comments":true,"path":"api/articles/iOS逆向工程.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"iOS逆向工程","slug":"iOS逆向工程","count":2,"path":"api/categories/iOS逆向工程.json"}],"tags":[],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}},"next_post":{"title":"Google Cardboard for iOS 虚拟现实开发","uid":"0253063df22cd83edff3aeaf17dd4742","slug":"Google-Cardboard-for-iOS-虚拟现实开发","date":"2016-07-08T09:07:56.000Z","updated":"2019-05-14T04:53:37.000Z","comments":true,"path":"api/articles/Google-Cardboard-for-iOS-虚拟现实开发.json","keywords":null,"cover":[],"text":"原文链接 This document describes how to use the Google VR SDK for iOS (iOS SDK) to create your own Virtual Reality (VR) experiences. You can use...","link":"","photos":[],"count_time":{"symbolsCount":"8.6k","symbolsTime":"8 mins."},"categories":[{"name":"Virtual Reality","slug":"Virtual-Reality","count":1,"path":"api/categories/Virtual-Reality.json"}],"tags":[{"name":"Cardboard for iOS","slug":"Cardboard-for-iOS","count":1,"path":"api/tags/Cardboard-for-iOS.json"}],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}}}