{"title":"Mac 系统上编译 iOS 可用的FFmpeg 库","uid":"be9c948da683d2b10fcb2164adbb9d8b","slug":"Mac-系统上编译-iOS-可用的FFmpeg-库","date":"2016-08-24T07:32:07.000Z","updated":"2019-05-14T04:53:29.000Z","comments":true,"path":"api/articles/Mac-系统上编译-iOS-可用的FFmpeg-库.json","keywords":null,"cover":[],"content":"<p><a href=\"http://www.jianshu.com/p/ec432a8f5729\">原文转载</a></p>\n<p>1、<a href=\"https://github.com/libav/gas-preprocessor\">gas-preprocessor</a><br>2、<a href=\"https://github.com/yasm/yasm\">yasm 1.2.0</a><br>3、<a href=\"https://github.com/kewlbear/FFmpeg-iOS-build-script\">FFmpeg-iOS-build-script</a>（ps:这个脚本真是业界良心呀，帮我们省下了不少心。）</p>\n<p>好了，已经有了，但是怎么优雅的使用出招式呢？慢慢来，博主力求详细的为大家分解每个步骤。</p>\n<p>#1、下载<a href=\"https://github.com/libav/gas-preprocessor\">gas-preprocessor</a></p>\n<p>那么 gas-preprocessor 是什么呢？</p>\n<pre><code>gas-preprocessor 其实就是我们要编译 FFmpeg 的所需脚本文件。\n</code></pre>\n<p>1）我们将其解压后，发现内部只有简单的 4 个文件，如下图：</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/appledevelopffmpeg1.png\"></p>\n<p>不难发现其中的 <code>gas-preprocessor.pl</code>，没错，这就是我们要找的刀了，恭喜，你获取了小木剑一把，继续往坑里走少年。</p>\n<p>2）继续将 <code>gas-preprocessor.pl</code> 文件复制到 /usr/sbin/ 目录下（ps：应该会有很多小伙伴发现这个目录是根本没法修改的，那么这种情况下，小伙伴们可以将文件复制到 /usr/local/bin/ 目录下），然后为文件开启可执行权限，打开终端并输入以下命令行：</p>\n<pre><code>chmod 777 /usr/sbin/gas-preprocessor.pl\n</code></pre>\n<p>或</p>\n<pre><code>chmod 777 /usr/local/bin/gas-preprocessor.pl\n</code></pre>\n<p>#2、安装 yasm<br>yasm 又是什么呢？</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Yasm是一个完全重写的 NASM 汇编。目前，它支持x86和AMD64指令集，接受NASM和气体汇编语法，产出二进制，ELF32 ， ELF64 ， COFF ， Mach - O的（ 32和64 ），RDOFF2 ，的Win32和Win64对象的格式,并生成STABS 调试信息的来源，DWARF 2 ，CodeView 8格式。</p></blockquote>\n<p>1）下载yasm<br>上一篇文章博文带大家下载了一个好东西 homebrew，既然是优雅的编译，我们就用最像程序员的东西，命令行了，打开终端，输入如下：</p>\n<pre><code>brew install yasm\n</code></pre>\n<p>2）检测是否已安装 yasm</p>\n<pre><code>brew install yasm\n</code></pre>\n<p>如果你成功安装了 yasm，输出如下图：</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/appledevelopffmpeg2.png\"></p>\n<p>好了，你获得了隔壁老王内裤一条。额。。让我们继续前进。</p>\n<p>#3、编译FFmpeg-iOS-build-script</p>\n<p>编译FFmpeg-iOS-build-script,得到我们需要的iOS能用的ffmpeg库</p>\n<p>这个脚本有神马用呢？</p>\n<p>不难看出，这个脚本是转为 iOS 编译出可用的 ffmpeg 的库，这个业界良心，我们称之为<code>神的内裤</code></p>\n<p>好吧，不搞笑，有了这个脚本，我们根本就不用下载 ffmpeg 了，脚本会帮我们下载好最新版本的 ffmpeg，</p>\n<p>并打包成一个 iOS 可用的 ffmpeg 库提供给我们了，当然，前提是你必须要跟着博主一步一步入坑才行喔。</p>\n<p>1）进入我们的 gitHub 网站，把 <a href=\"https://github.com/kewlbear/FFmpeg-iOS-build-script\">FFmpeg-iOS-build-script</a> 下载好压缩包。</p>\n<p>2）编译脚本，打包出我们需要的 iOS 的 ffmpeg 库<br>解压 <a href=\"https://github.com/kewlbear/FFmpeg-iOS-build-script\">FFmpeg-iOS-build-script</a> 得到的文件如下：</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/appledevelopffmpeg3.png\"></p>\n<p>我们目标不是开发 tvos 吧。。那么我们的目标脚本就只剩下 build-ffmpeg.sh 了。打开终端，进入解压后的 FFmpeg-iOS-build-script 文件夹，命令行如下：</p>\n<pre><code>cd 小伙伴们的FFmpeg-iOS-build-script文件夹路径\n</code></pre>\n<p>执行 build-ffmpeg.sh 脚本：</p>\n<pre><code>./build-ffmpeg.sh\n</code></pre>\n<p>当然，官方是有说明的：<br>To build everything:</p>\n<pre><code>./build-ffmpeg.sh\n</code></pre>\n<p>To build arm64 libraries:</p>\n<pre><code>./build-ffmpeg.sh arm64\n</code></pre>\n<p>To build fat libraries for armv7 and x86_64 (64-bit simulator):</p>\n<pre><code>./build-ffmpeg.sh armv7 x86_64\n</code></pre>\n<p>To build fat libraries from separately built thin libraries:</p>\n<pre><code>./build-ffmpeg.sh lipo\n</code></pre>\n<p>好了，执行完命令行后，终端就会拿着这条内裤，在啪啪啪了（编译）。。。这段时间里，你可以去喝杯咖啡慢慢等待，最后得到的文件如下：</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/appledevelopffmpeg4.png\"></p>\n<p>小伙伴们不难看到，FFmpeg-iOS 就是我们所需要的文件夹了，看到内部的各种 .a 文件，也就是我们熟悉的静态库了。</p>\n<p>4、集成FFmpeg 库开发工程当中</p>\n<p>1）把 FFmpeg-iOS 直接复制到你的工程目录下</p>\n<p>2）把 FFmpeg-iOS 从你的工程目录下拖到工程当中，最后得到的结果如下图：</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/appledevelopffmpeg5.png\"></p>\n<p>3）编译一下，你会发下有错误，哈哈，原因是你没有链接编译文件<br>好，我们进入 Build Setting ，修改 header search Path 链接到工程的 include 文件当中 操作如下：</p>\n<p><img src=\"https://github.com/williamxiewz/williamxie-github-io/raw/master/appledevelopffmpeg6.png\"></p>\n<p>OK，我们可以在工程当中引入 #import “avformat.h” 文件了，编译 Success</p>\n<p>好了，至此，我们已经成功编译并集成了 ffmpeg 了，但是怎么使用呢？怎么压缩视频，视频压缩视频？<br>怎么实现 h264 编码？怎么将视频/音频推送到流媒体服务器呢？这些都是我们将要说的。</p>\n","text":"原文转载 1、gas-preprocessor2、yasm 1.2.03、FFmpeg-iOS-build-script（ps:这个脚本真是业界良心呀，帮我们省下了不少心。） 好了，已经有了，但是怎么优雅的使用出招式呢？慢慢来，博主力求详细的为大家分解每个步骤。 #1、下载gas...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"FFmpeg","slug":"FFmpeg","count":1,"path":"api/tags/FFmpeg.json"}],"toc":"","author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}},"mapped":true,"prev_post":{"title":"iOS集成ijkplayer播放器框架","uid":"8e9cdb3c593732dd87e3620e5e53c7aa","slug":"iOS集成ijkplayer播放器框架","date":"2016-08-24T12:24:45.000Z","updated":"2016-09-07T07:37:50.000Z","comments":true,"path":"api/articles/iOS集成ijkplayer播放器框架.json","keywords":null,"cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"音视频开发","slug":"音视频开发","count":7,"path":"api/categories/音视频开发.json"}],"tags":[{"name":"ijkplayer","slug":"ijkplayer","count":1,"path":"api/tags/ijkplayer.json"}],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}},"next_post":{"title":"iOS 定位以及地图应用","uid":"a8f837f695eb86dad5d7620558fa20f8","slug":"iOS-定位以及地图应用","date":"2016-08-21T11:18:05.000Z","updated":"2019-05-14T04:53:31.000Z","comments":true,"path":"api/articles/iOS-定位以及地图应用.json","keywords":null,"cover":[],"text":"#定位服务 现在的移动设备大多都提供定位服务功能，使用iOS系统的iPhone,iPod touch和iPad都可以提供位置服务，iOS设备能提供3种不同途径进行定位: WiFi定位：通过査饰一个wiFi路th器的地理位置的信息，比较省电。iPhoneiPod touch和ipa...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"iOS SDK","slug":"iOS-SDK","count":19,"path":"api/categories/iOS-SDK.json"}],"tags":[{"name":"MapKit","slug":"MapKit","count":1,"path":"api/tags/MapKit.json"},{"name":"CoreLocation","slug":"CoreLocation","count":1,"path":"api/tags/CoreLocation.json"}],"author":{"name":"William Xie","slug":"blog-author","avatar":"/img/author.png","link":"/","description":"","socials":{"github":"https://github.com/williamxiewz","twitter":"https://twitter.com/williamxie_wz","stackoverflow":"http://stackoverflow.com/users/4078104/goingxiebin-jobs","wechat":"","qq":"","weibo":"https://weibo.com/u/2281381063","zhihu":"https://www.zhihu.com/people/williamxiewz","csdn":"https://blog.csdn.net/u014222645","juejin":"https://juejin.cn/user/3280598430133277","customs":{}}}}}